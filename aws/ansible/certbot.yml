---
- name: Certbot debian play
  hosts: 
    - debian
  tasks:
    # Update OpenSSH and verify it's updated
    - name: Update OpenSSH on Debian and Ubuntu
      become: true
      apt:
        name: openssh-client
        state: latest

    - name: Check OpenSSH client version on Debian and Ubuntu
      become: true
      shell: ssh -V
      register: ssh_version

    - debug:
        var: ssh_version.stdout_lines

    # Install Certbot and verify installation
    - name: Install Certbot on Debian and Ubuntu
      become: true
      apt_repository:
        repo: 'ppa:certbot/certbot'

    - name: Verify Certbot repository is added
      become: true
      shell: apt-cache policy | grep -q 'certbot/certbot'
      register: certbot_repository

    - name: Debug Certbot repository verification
      debug:
        var: certbot_repository.stdout_lines

- name: Certbot redhat play
  hosts: 
    - redhat
  tasks:
    # Enable EPEL and verify it's enabled
    - name: Check if EPEL repository is installed on Red Hat
      become: True
      yum:
        list: epel-release
      register: epel_status

    - name: Display EPEL repository status
      debug:
        var: epel_status

    - name: Ensure dnf-plugins are installed on CentOS 8+.
      yum:
        name: dnf-plugins-core
        state: present
  
    - name: Enable DNF module for CentOS 8.3+.
      shell: |
        dnf config-manager --set-enabled powertools
      register: dnf_module_enable
      changed_when: false

      when: ansible_facts['distribution_version'] is version('8.3', '>=')

    - name: Ensure snapd is installed.
      package:
        name: snapd
        state: present
      register: snapd_install

    - name: Ensure snapd is enabled.
      systemd:
        name: snapd.socket
        enabled: true
        state: started

    - name: Enable classic snap support.
      file:
        src: /var/lib/snapd/snap
        dest: /snap
        state: link
      when: ansible_os_family != "Debian"

    - name: Update snap after install.
      shell: snap install core; snap refresh core
      changed_when: true
      failed_when: false
      when: snapd_install is changed

    - name: Install certbot via snap.
      snap:
        name: certbot
        classic: true

    - name: Symlink certbot into place.
      file:
        src: /snap/bin/certbot
        dest: /usr/bin/certbot
        state: link
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Set Certbot script variable.
      set_fact:
        certbot_script: /usr/bin/certbot

    # Update OpenSSH on RedHat and verify the update
    - name: Update OpenSSH on RedHat
      become: true
      dnf:
        name: openssh-server
        state: latest

# cd ansible
# ansible-playbook -i inventory certbot.yml
